<?xml version="1.0"?>
<!--
/*                                                                        *
 * This script belongs to the TYPO3 project.                              *
 *                                                                        *
 * It is free software; you can redistribute it and/or modify it under    *
 * the terms of the GNU General Public License as published by the        *
 * Free Software Foundation, either version 3 of the License, or (at your *
 * option) any later version.                                             *
 *                                                                        *
 * This script is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-    *
 * TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General      *
 * Public License for more details.                                       *
 *                                                                        *
 * You should have received a copy of the GNU General Public License      *
 * along with the script.                                                 *
 * If not, see http://www.gnu.org/licenses/gpl.html                       *
 *                                                                        *
 * The TYPO3 project - inspiring people to share!                         *
 *                                                                        */
-->
<project name="Build">

	<target name="build" depends="clean, doc-render, createarchives"/>

	<target name="clean">
		<delete quiet="true" includeemptydirs="true">
			<fileset refid="files-temporary"/>
		</delete>
	</target>

	<target name="polish" depends="clean, doc-clean-all" description="Clean in a way that removes all build artifacts"/>

	<target name="deploy-latest">
		<fail unless="env.BUILD_NUMBER" message="You must set the environment variable BUILD_NUMBER for this task."/>
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>
		<if>
			<not>
				<available file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
			</not>
			<then>
				<phingcall target="build-latest"/>
			</then>
		</if>
		<exec logoutput="true" checkreturn="true" command="scp ${project.archivesDirectory}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2 ${ssh.host.demo}:${path.latest.base}"/>

		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.latest.base}/Web"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.latest.base}/Packages"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.latest.base}/Configuration"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.latest.base}/Data"/>

		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} tar -C ${path.latest.base} -xjf ${path.latest.base}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm ${path.latest.base}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} cp ${path.latest.base}favicon.ico ${path.latest.base}Web/"/>

		<php function="file_get_contents">
			<param value="${url.latest.base}typo3/setup/importandcreateadministrator?packageKey=PhoenixDemoTypo3Org&amp;identifier=admin&amp;password=password&amp;person[name][firstName]=George&amp;person[name][lastName]=Hudson"/>
		</php>
	</target>
	<target name="build-latest" depends="clean, doc-render, create-archive-bz2"/>

	<target name="deploy-sprint">
		<fail unless="env.BUILD_NUMBER" message="You must set the environment variable BUILD_NUMBER for this task."/>
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>
		<if>
			<not>
				<available file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
			</not>
			<then>
				<phingcall target="build"/>
			</then>
		</if>
		<exec logoutput="true" checkreturn="true" command="scp ${project.archivesDirectory}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2 ${ssh.host.demo}:${path.demo.base}"/>

		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.demo.base}/Web"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.demo.base}/Packages"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.demo.base}/Configuration"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm -rf ${path.demo.base}/Data"/>

		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} tar -C ${path.demo.base} -xjf ${path.demo.base}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} rm ${path.demo.base}TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.demo} cp ${path.demo.base}favicon.ico ${path.demo.base}Web/"/>

		<php function="file_get_contents">
			<param value="${url.demo.base}typo3/setup/importandcreateadministrator?packageKey=PhoenixDemoTypo3Org&amp;identifier=admin&amp;password=password&amp;person[name][firstName]=George&amp;person[name][lastName]=Hudson"/>
		</php>
	</target>

	<target name="release-sprint" description="Release Phoenix sprint result to SourceForge and flow3.typo3.org">
		<fail unless="env.RELEASE_VERSION" message="You must set the environment variable RELEASE_VERSION for this task."/>
		<property name="releaseVersion" value="${env.RELEASE_VERSION}"/>

		<phingcall target="lint"/>
		<phingcall target="test"/>
		<phingcall target="release-tag"/>
		<phingcall target="build"/>
		<phingcall target="release-publish-archives"/>
		<phingcall target="deploy-sprint"/>

		<phingcall target="doc-publish-api">
			<property name="packageKey" value="TYPO3"/>
		</phingcall>
		<phingcall target="doc-publish-manual">
			<property name="packageKey" value="TYPO3"/>
		</phingcall>
		<phingcall target="doc-publish-api">
			<property name="packageKey" value="TypoScript"/>
		</phingcall>
		<phingcall target="doc-publish-manual">
			<property name="packageKey" value="TypoScript"/>
		</phingcall>
	</target>

	<target name="release-tag">
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>

		<property name="git.tagDistribution.tag" value="${releaseVersion}"/>
		<exec logoutput="true" checkreturn="true" command="git tag -f -a -m 'Tag distribution with tag ${git.tagDistribution.tag}' ${git.tagDistribution.tag}" />
		<exec logoutput="true" checkreturn="true" command="git submodule foreach 'echo Tag distribution with tag ${git.tagDistribution.tag} | git tag -f -a -F - ${git.tagDistribution.tag}'" />
	</target>

	<target name="createarchives" depends="create-archive-zip,create-archive-gz,create-archive-bz2"/>
	<target name="create-archive-zip">
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>

		<mkdir dir="${project.archivesDirectory}"/>

		<delete file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.zip" quiet="true"/>
		<zip destfile="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.zip">
			<fileset refid="files-for-release-archive"/>
		</zip>

		<filehash file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.zip" propertyname="md5.zip"/>
		<echo>MD5 hash for the generated archive is:</echo>
		<echo>${md5.zip} TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.zip</echo>
	</target>
	<target name="create-archive-gz">
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>

		<mkdir dir="${project.archivesDirectory}"/>

		<delete file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.gz" quiet="true"/>
		<tar destfile="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.gz" compression="gzip">
			<fileset refid="files-for-release-archive"/>
		</tar>

		<filehash file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.gz" propertyname="md5.targz"/>
		<echo>MD5 hash for the generated archive is:</echo>
		<echo>${md5.targz} TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.gz</echo>
	</target>
	<target name="create-archive-bz2">
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>

		<mkdir dir="${project.archivesDirectory}"/>

		<delete file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2" quiet="true"/>
		<tar destfile="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2" compression="bzip2">
			<fileset refid="files-for-release-archive"/>
		</tar>

		<filehash file="${project.archivesDirectory}/TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2" propertyname="md5.tarbz2"/>
		<echo>MD5 hash for the generated archive is:</echo>
		<echo>${md5.tarbz2} TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.tar.bz2</echo>
	</target>

	<target name="release-publish-archives">
		<fail unless="releaseVersion" message="You must set the releaseVersion property for this task."/>

		<mkdir dir="${project.archivesDirectory}TYPO3 Phoenix/${releaseVersion}"/>
		<copy todir="${project.archivesDirectory}TYPO3 Phoenix/${releaseVersion}">
			<fileset dir="${project.archivesDirectory}">
				<include name="TYPO3-Phoenix-${releaseVersion}-build${env.BUILD_NUMBER}.*"/>
			</fileset>
		</copy>
		<exec logoutput="true" checkreturn="true" command="rsync -avP -e ssh ${project.archivesDirectory}TYPO3\ Phoenix typo3.frs.sourceforge.net:/home/frs/project/t/ty/typo3/"/>
		<delete dir="${project.archivesDirectory}TYPO3\ Phoenix" quiet="true" includeemptydirs="true"/>
	</target>

</project>